# This is a basic workflow to help you get started with Actions

name: Main

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  androidBuild:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [release, debug]

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: true

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev g++-multilib gcc-multilib libasound2-dev libx11-dev libxext-dev libxi-dev libxrandr-dev libxinerama-dev libmbedtls-dev libpng-dev libturbojpeg-dev libuv1-dev libvorbis-dev

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'zulu'
          java-version: '19'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5

      - name: Set HAXEPATH
        run: |
          echo "HAXEPATH=$HAXE_STD_PATH/.." >> $GITHUB_ENV

      - name: Installing Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null
          haxelib install lime 7.9.0 --quiet
          haxelib install openfl 9.1.0 --quiet
          haxelib install flixel 4.11.0 --quiet
          haxelib run lime setup flixel
          haxelib install flixel-tools --quiet
          haxelib install flixel-ui --quiet
          haxelib install polymod --quiet
          haxelib install spinehaxe --quiet
          haxelib git polymod-mastereric https://github.com/MasterEric/polymod
          haxelib install hscript 
          haxelib git hscript-yoshiengine https://github.com/YoshiCrafter29/hscript-improved
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib install flixel-addons --quiet
          haxelib git hxCodec https://github.com/polybiusproxy/hxcodec
          haxelib git linc_luajit https://github.com/Sirox228/linc_luajit
          haxelib git SScript https://github.com/TheWorldMachinima/SScript
          haxelib git extension-androidtools https://github.com/Fearester/extension-androidtools
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib list

      - name: Enable HXCPP Compile Cache
        run: |
          echo "HXCPP_COMPILE_CACHE=~/.hxcpp" >> $GITHUB_ENV

      - name: Configure Android
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Building
        run: haxelib run lime build android -${{ matrix.arch }}

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: androidBuild-${{ matrix.arch }}
          path: export/android/bin/app/build/outputs/apk/debug
          if-no-files-found: error
